<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ppt_test01DataSet" targetNamespace="http://tempuri.org/ppt_test01DataSet.xsd" xmlns:mstns="http://tempuri.org/ppt_test01DataSet.xsd" xmlns="http://tempuri.org/ppt_test01DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ppt_test01ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ppt_test01ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.tpj_power2.Properties.Settings.GlobalReference.Default.ppt_test01ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="test_table02TableAdapter" GeneratorDataComponentClassName="test_table02TableAdapter" Name="test_table02" UserDataComponentName="test_table02TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ppt_test01ConnectionString (Settings)" DbObjectName="ppt_test01.dbo.test_table02" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[test_table02] WHERE (([colona_1] = @Original_colona_1) AND ((@IsNull_colona_2 = 1 AND [colona_2] IS NULL) OR ([colona_2] = @Original_colona_2)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_colona_1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[test_table02] ([colona_1], [colona_2]) VALUES (@colona_1, @colona_2);
SELECT colona_1, colona_2 FROM test_table02 WHERE (colona_1 = @colona_1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@colona_1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT colona_1, colona_2 FROM dbo.test_table02</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[test_table02] SET [colona_1] = @colona_1, [colona_2] = @colona_2 WHERE (([colona_1] = @Original_colona_1) AND ((@IsNull_colona_2 = 1 AND [colona_2] IS NULL) OR ([colona_2] = @Original_colona_2)));
SELECT colona_1, colona_2 FROM test_table02 WHERE (colona_1 = @colona_1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@colona_1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_colona_1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_colona_2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="colona_2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="colona_1" DataSetColumn="colona_1" />
              <Mapping SourceColumn="colona_2" DataSetColumn="colona_2" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ppt_test01DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ppt_test01DataSet" msprop:Generator_UserDSName="ppt_test01DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="test_table02" msprop:Generator_TableClassName="test_table02DataTable" msprop:Generator_TableVarName="tabletest_table02" msprop:Generator_TablePropName="test_table02" msprop:Generator_RowDeletingName="test_table02RowDeleting" msprop:Generator_RowChangingName="test_table02RowChanging" msprop:Generator_RowEvHandlerName="test_table02RowChangeEventHandler" msprop:Generator_RowDeletedName="test_table02RowDeleted" msprop:Generator_UserTableName="test_table02" msprop:Generator_RowChangedName="test_table02RowChanged" msprop:Generator_RowEvArgName="test_table02RowChangeEvent" msprop:Generator_RowClassName="test_table02Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="colona_1" msprop:Generator_ColumnVarNameInTable="columncolona_1" msprop:Generator_ColumnPropNameInRow="colona_1" msprop:Generator_ColumnPropNameInTable="colona_1Column" msprop:Generator_UserColumnName="colona_1" type="xs:int" />
              <xs:element name="colona_2" msprop:Generator_ColumnVarNameInTable="columncolona_2" msprop:Generator_ColumnPropNameInRow="colona_2" msprop:Generator_ColumnPropNameInTable="colona_2Column" msprop:Generator_UserColumnName="colona_2" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:test_table02" />
      <xs:field xpath="mstns:colona_1" />
    </xs:unique>
  </xs:element>
</xs:schema>